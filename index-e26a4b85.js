import{G as I,q as d,o as t,k as $,_ as W,p as u,a as l,O as p,s as z,D as U}from"./vendor-0e751db0.js";(function(){const e=document.createElement("link").relList;if(e&&e.supports&&e.supports("modulepreload"))return;for(const i of document.querySelectorAll('link[rel="modulepreload"]'))s(i);new MutationObserver(i=>{for(const n of i)if(n.type==="childList")for(const c of n.addedNodes)c.tagName==="LINK"&&c.rel==="modulepreload"&&s(c)}).observe(document,{childList:!0,subtree:!0});function a(i){const n={};return i.integrity&&(n.integrity=i.integrity),i.referrerPolicy&&(n.referrerPolicy=i.referrerPolicy),i.crossOrigin==="use-credentials"?n.credentials="include":i.crossOrigin==="anonymous"?n.credentials="omit":n.credentials="same-origin",n}function s(i){if(i.ep)return;i.ep=!0;const n=a(i);fetch(i.href,n)}})();const H="https://js-headquaters.github.io/beast-memory-game/back-dark-a5bcd3c7.jpg",V="https://js-headquaters.github.io/beast-memory-game/back-light-c1edf369.jpg",T=6,y=1e3,_=800,J="https://js-headquaters.github.io/beast-memory-game/bear-c55e6894.jpg",K="https://js-headquaters.github.io/beast-memory-game/duck-d06ea39e.jpg",Y="https://js-headquaters.github.io/beast-memory-game/cat-3b5927fa.jpg",Z="https://js-headquaters.github.io/beast-memory-game/chicken-bbdea4b0.jpg",X="https://js-headquaters.github.io/beast-memory-game/dog-05a67f24.jpg",Q="https://js-headquaters.github.io/beast-memory-game/fox-6585f4c7.jpg",ee="https://js-headquaters.github.io/beast-memory-game/hedgehog-e27abbd5.jpg",te="https://js-headquaters.github.io/beast-memory-game/lion-5ad0dad5.jpg",ae="https://js-headquaters.github.io/beast-memory-game/monkey-0ff29deb.jpg",se="https://js-headquaters.github.io/beast-memory-game/owl-48b001a3.jpg",ie="https://js-headquaters.github.io/beast-memory-game/panda-e0d3e3fc.jpg",re="https://js-headquaters.github.io/beast-memory-game/pig-9b1d2126.jpg",ne="https://js-headquaters.github.io/beast-memory-game/rabbit-e9a4de30.jpg",oe="https://js-headquaters.github.io/beast-memory-game/sheep-25b90f5a.jpg",le="https://js-headquaters.github.io/beast-memory-game/turtle-9854d7c8.jpg",ce=new Map([["bear",J],["duck",K],["cat",Y],["chicken",Z],["dog",X],["fox",Q],["hedgehog",ee],["lion",te],["monkey",ae],["owl",se],["panda",ie],["pig",re],["rabbit",ne],["sheep",oe],["turtle",le]]),C=I(null),A=I(null),L=I(null);const ue=`${_/y}s`;function he({card:r}){const{openCard:e,isCardOpen:a,showDebugInfo:s}=d(C),{theme:i}=d(L),n=()=>{e(r)},c=h=>`game-card ${a(h)&&"game-card_open"} ${h.isActive&&"game-card_active"}`,o=`--card-flip-animation-time: ${ue}`;return t("div",{style:o,class:c(r),onClick:n,children:[s.value&&t("div",{class:"game-card__animal-type",children:r.animalType}),t("div",{class:"game-card__inner",children:[t("div",{class:"game-card__backing",children:t("img",{class:"game-card__backing-image",src:i.value==="dark"?H:V,alt:"card backing",loading:"eager"})}),t("div",{class:"game-card__animal",children:t("img",{class:"game-card__animal-image",src:ce.get(r.animalType),alt:r.animalType})})]})]})}function de(){const{cards:r,horizontalCardsCount:e,verticalCardsCount:a}=d(C);let s=`--horizontal-cards-count: ${e.value};`;return s+=`--vertical-cards-count: ${a.value};`,t("div",{style:s,class:"game-field",children:t("div",{class:"game-field__cards",children:r.value.map(i=>t(he,{card:i},i.id))})})}function g({title:r,children:e}){return t("div",{class:"card",children:[t("div",{class:"card__title",children:r}),t("div",{class:"card__content",children:e})]})}function m({name:r,value:e}){return t($,{children:[t("div",{class:"name",children:r}),t("div",{class:"value",children:e||"N/A"})]})}function v({children:r}){return t("div",{class:"key-value-list",children:r})}function x({title:r,children:e,className:a,onTitleClick:s}){const i=a?`modal ${a}`:"modal";return t("div",{class:i,children:[t("div",{class:"modal__title",onClick:s,children:r}),t("div",{class:"modal__content",children:e})]})}const j=["Absolutely Brilliant!","Spectacular Achievement!","Exceptional Job!","Mind-Blowing Performance!","Stunning Effort!","Breathtaking Success!","Astonishing Results!","You're Unstoppable!","Phenomenal Work!","Simply Marvelous!"],ge=()=>{const r=Math.floor(Math.random()*j.length);return j[r]},me=r=>r.replace(/([a-z0-9]|(?=[A-Z]))([A-Z])/g,"$1-$2").toLowerCase();function ve(){const{timeSpentInSeconds:r,cardsFlipCount:e}=d(C),{averageCardFlipsCount:a,averageTimeSpentInSeconds:s}=d(A),i=W(ge());return t(x,{title:i.current,className:"game-over",children:[t(g,{title:"Time spent in second",children:[t(v,{children:t(m,{name:"This Game:",value:r.value})}),t(v,{children:t(m,{name:"You Average:",value:s.value})})]}),t(g,{title:"Card Flips Count",children:[t(v,{children:t(m,{name:"This Game:",value:e.value})}),t(v,{children:t(m,{name:"You Average:",value:a.value})})]})]})}function f({className:r,value:e,increase:a,decrease:s}){const i=r?`value-selector ${r}`:"value-selector";return t("div",{class:i,children:[t("button",{className:"value-selector__button",onClick:s,children:"-"}),t("span",{children:e}),t("button",{className:"value-selector__button",onClick:a,children:"+"})]})}function G(){return window.Telegram.WebApp.MainButton}function pe(){return JSON.stringify(window.Telegram.WebApp,null,2)}function Ce(){return window.Telegram.WebApp.platform!=="unknown"}function fe(){return window.Telegram.WebApp}function B(){return window.Telegram.WebApp.colorScheme}function Se(){return!!window.Telegram?.WebApp?.CloudStorage&&window.Telegram.WebApp.isVersionAtLeast("6.9")}function be(...r){return window.Telegram.WebApp.CloudStorage.setItem(...r)}function Te(...r){return window.Telegram.WebApp.CloudStorage.getItem(...r)}function ye(){return window.Telegram.WebApp.HapticFeedback}function _e({gameStatistic:r,level:e}){const a=r.length;return a===0?t("div",{children:["No data for ",e," level, play more games to see game history "]}):t("div",{class:"history",children:[t("div",{class:"history__cell",children:"â„–"}),t("div",{class:"history__cell",children:"Time"}),t("div",{class:"history__cell",children:"Flips"}),r?.map(({timeSpentInSeconds:s,cardFlipsCount:i},n)=>t($,{children:[t("div",{class:"history__cell",children:a-n}),t("div",{class:"history__cell",children:s}),t("div",{class:"history__cell",children:i})]}))]})}const D=l(0),M=u(()=>D.value>3);function Ie(){const{averageCardFlipsCount:r,averageTimeSpentInSeconds:e,gameLevelForStatistic:a,increaseStatisticLevel:s,decreaseStatisticLevel:i,resetStatistics:n,currentLevelStatistic:c}=d(A),{toggleTheme:o,theme:h}=d(L),{increaseLevel:E,decreaseLevel:P,gameLevel:R,showDebugInfo:k,toggleShowDebugInfo:F}=d(C);return t(x,{title:"Statistic",className:"statistic",onTitleClick:()=>{D.value+=1},children:[M.value&&t(g,{title:"Settings",children:t(v,{children:[t("div",{children:"Current Level:"}),t(f,{value:R.value,increase:E,decrease:P}),t("div",{children:"Theme:"}),t(f,{value:h.value,increase:o,decrease:o}),t("div",{children:"Show debug info:"}),t(f,{value:k.value?"Yes":"No",increase:F,decrease:F}),t("a",{className:"statistic__reset-link",href:"#",onClick:()=>n(),children:"Reset statistics"})]})}),t(g,{title:"Show data for level",children:t(f,{className:"statistic__level-selector",value:a.value,increase:s,decrease:i})}),t(g,{title:"Game Statistic",children:t(v,{children:[t(m,{name:"Average Time:",value:e.value}),t(m,{name:"Average Flips:",value:r.value})]})}),t(g,{title:"Game history",children:t(_e,{level:a.value,gameStatistic:c.value})}),M.value&&k.value&&t(g,{title:"Debug Info",children:t("div",{className:"statistic__debug",children:pe()})})]})}class w{constructor(e){this.name=e}log(e,a){const s=`[${this.name}] > ${e}`;a?console.log(s,a):console.log(s)}error(e,a){console.error(`[${this.name}] > ${e}`,...[a||null].filter(s=>s))}}const Ae=["bear","owl","cat","chicken","dog","fox","hedgehog","lion","monkey","duck","panda","pig","rabbit","sheep","turtle"],Le=new Map([[1,{horizontalCardsCount:3,pairsCount:3}],[2,{horizontalCardsCount:4,pairsCount:6}],[3,{horizontalCardsCount:4,pairsCount:8}],[4,{horizontalCardsCount:4,pairsCount:10}],[5,{horizontalCardsCount:4,pairsCount:12}],[6,{horizontalCardsCount:5,pairsCount:15}]]);class we{constructor(){this.gameLevel=l(1),this.cards=l([]),this.horizontalCardsCount=l(0),this.verticalCardsCount=l(0),this.currentState=l("init"),this.openCardsIds=l([]),this.cardsFlipCount=l(0),this.showDebugInfo=l(!1),this.cardsMap=u(()=>this.cards.value.reduce((e,a)=>(e.set(a.id,a),e),new Map)),this.timeSpentInSeconds=u(()=>{const e=this.startTimestamp.value,s=this.currentTimestamp.value-e;return s>0?Math.floor(s/y):0}),this.canIncreaseLevel=u(()=>this.gameLevel.value<T),this.canDecreaseLevel=u(()=>this.gameLevel.value>1),this.menuButtonText=u(()=>this.currentState.value==="game_over"?this.canIncreaseLevel.value?"Next level":"Play again":this.currentState.value==="menu"?"Close":"Statistic"),this.startTimestamp=l(null),this.currentTimestamp=l(null),this.mainButton=G(),this.logger=new w("GameStateService"),this.feedback=ye(),this.restart=()=>{this.currentState.value="init"},this.openCard=e=>{this.currentState.value!=="run"||!e.isActive||this.openCardsIds.value.length>=2||this.isCardOpen(e)||(this.openCardsIds.value=[...this.openCardsIds.value,e.id],this.cardsFlipCount.value+=1,this.logger.log(`opened "${e.animalType}" card`),!(this.openCardsIds.value.length<2)&&this.closeCards())},this.isCardOpen=e=>this.openCardsIds.value.includes(e.id),this.startTimer=()=>{this.timer=setInterval(()=>{this.currentTimestamp.value=Date.now()},y)},this.stopTimer=()=>{clearInterval(this.timer)},this.resetTimer=()=>{this.startTimestamp.value=Date.now()},this.increaseLevel=()=>{const e=this.gameLevel.value+1;e<=T&&(this.gameLevel.value=e,this.initGame())},this.decreaseLevel=()=>{const e=this.gameLevel.value-1;e>0&&(this.gameLevel.value=e,this.initGame())},this.mainButtonClickHandler=()=>{if(this.currentState.value==="game_over"){this.increaseLevel(),this.restart();return}this.currentState.value!=="menu"?this.currentState.value="menu":this.currentState.value="run"},this.toggleShowDebugInfo=()=>{this.showDebugInfo.value=!this.showDebugInfo.value},this.mainButton.show(),this.mainButton.onClick(this.mainButtonClickHandler),p(()=>{this.mainButton.setText(this.menuButtonText.value)}),p(()=>{const e=this.currentState.value;if(this.logger.log(`game state changed to "${e}"`),e==="init"){this.initGame(),this.currentState.value="run";return}if(e==="run"){this.startTimer();return}if(e==="menu"||e==="game_over"){this.stopTimer();return}})}closeCards(){const e=this.cardsMap.value,a=this.openCardsIds.value,s=e.get(a[0]),i=e.get(a[1]),n=s.animalType===i.animalType;setTimeout(()=>{if(this.openCardsIds.value=[],!n){this.logger.log(`card "${s.animalType}" do not match card "${i.animalType}"`);return}this.logger.log(`card "${s.animalType}" match card "${i.animalType}"`),this.feedback.impactOccurred("heavy"),s.isActive=!1,i.isActive=!1,this.cards.value=[...this.cards.value],!this.cards.value.some(o=>o.isActive)&&setTimeout(()=>{this.feedback.notificationOccurred("success"),this.currentState.value="game_over"},_)},_)}createGameCards(e){const a=(o,h)=>({animalType:o,isActive:!0,id:`${o}-${h}`}),s=this.getRandomAnimalTypes(e),i=s.map(o=>a(o,1)),n=s.map(o=>a(o,2));return this.getShuffledArray([...i,...n])}getShuffledArray(e){const a=[...e];for(let s=a.length-1;s>0;s--){const i=Math.floor(Math.random()*(s+1));[a[s],a[i]]=[a[i],a[s]]}return a}getRandomAnimalTypes(e){return this.getShuffledArray(Ae).slice(0,e)}initGame(){this.resetTimer(),this.openCardsIds.value=[],this.cardsFlipCount.value=0;const{horizontalCardsCount:e,pairsCount:a}=Le.get(this.gameLevel.value);this.cards.value=this.createGameCards(a),this.horizontalCardsCount.value=e,this.verticalCardsCount.value=this.cards.value.length/e}}const ke=100,O=5,S="results",N={1:[],2:[],3:[],4:[],5:[],6:[]};class Fe{constructor(){this.canUseCloud=Se(),this.gameLevelForStatistic=l(1),this.statistic=l({...N}),this.currentLevelStatistic=u(()=>this.statistic.value[this.gameLevelForStatistic.value]??[]),this.averageTimeSpentInSeconds=u(()=>this.getAverageTimeSpentInSeconds()),this.averageCardFlipsCount=u(()=>this.getAverageCardFlipsCount()),this.logger=new w("StatisticService"),this.increaseStatisticLevel=()=>{const e=this.gameLevelForStatistic.value+1;e<=T&&(this.gameLevelForStatistic.value=e)},this.decreaseStatisticLevel=()=>{const e=this.gameLevelForStatistic.value-1;e>0&&(this.gameLevelForStatistic.value=e)},this.resetStatistics=async()=>{this.statistic.value={...N},this.logger.log("reset game statistic",this.statistic.value),this.saveStatisticToStorage()},this.addGameStatistic=(e,a)=>{const s=this.statistic.value?.[e]||[];this.statistic.value={...this.statistic.value,[e]:[a,...s].slice(0,ke)},this.logger.log("added new game statistic",this.statistic.value),this.saveStatisticToStorage()},this.loadStatisticFromStorage()}saveStatisticToStorage(){const e=JSON.stringify(this.statistic.value);if(localStorage.setItem(S,e),this.logger.log("saved game statistic to local storage"),!this.canUseCloud){this.logger.log("cloud storage is not available, so we cant save data to it");return}be(S,e,(a,s)=>{if(a){this.logger.error("cannot save to cloud storage",a);return}this.logger.log("saved game statistic to cloud storage",s)})}loadStatisticFromStorage(){const e=localStorage.getItem(S),a=e?JSON.parse(e):[];if(this.statistic.value=a,this.logger.log("loaded game statistic from local storage",a),!this.canUseCloud){this.logger.log("cloud storage is not available, so we cant load data from it");return}Te(S,(s,i)=>{s&&this.logger.error("cannot load statistic from cloud storage",s);const n=i?JSON.parse(i):[];this.logger.log("loaded statistic from cloud storage",n),Object.entries(this.statistic.value).every(([o,h])=>h.length<n[o].length)?(this.statistic.value=n,this.logger.log("cloud storage has more data used it",n)):this.logger.log("cloud storage has less data so using local data",n)})}getAverageTimeSpentInSeconds(){if(!this.gameLevelForStatistic.value)return null;const e=this.statistic.value[this.gameLevelForStatistic.value]||[];if(e.length===0)return null;const a=e.slice(0,O).reduce((s,i)=>s+=i.timeSpentInSeconds,0);return Math.floor(a/e.length)}getAverageCardFlipsCount(){if(!this.gameLevelForStatistic.value)return null;const e=this.statistic.value[this.gameLevelForStatistic.value]||[];if(e.length===0)return null;const a=e.slice(0,O).reduce((s,i)=>s+=i.cardFlipsCount,0);return Math.floor(a/e.length)}}const je={themeBackground:"rgba(228, 223, 249, 1)",themeModalBackground:"rgba(255, 255, 255, 0.8)",themeButtonTextColor:"rgba(255, 255, 255, 1)",themeButtonBackground:"rgba(135, 0, 190, 0.5)",themeTextMainColor:"rgba(25, 17, 45, 1)",themeTextHighlightColor:"rgba(60, 0, 120, 1)",themeShadowColor:"rgba(100, 65, 165, 0.6)",themeBorderColor:"rgba(100, 65, 165, 0.6)"},Be={themeBackground:"rgba(45, 20, 70, 1)",themeModalBackground:"rgba(35, 25, 55, 1)",themeButtonTextColor:"rgba(245, 230, 255, 1)",themeButtonBackground:"rgba(190, 0, 255, 0.85)",themeTextMainColor:"rgba(245, 230, 255, 1)",themeTextHighlightColor:"rgba(255, 205, 255, 1)",themeShadowColor:"rgba(190, 150, 255, 0.6)",themeBorderColor:"rgba(193, 113, 229, 0.5)"};class Me{constructor(){this.theme=l(B()),this.themeProperties=u(()=>this.theme.value==="light"?je:Be),this.mainButton=G(),this.webApp=fe(),this.logger=new w("ThemeService"),this.setTheme=e=>{this.theme.value=e},this.toggleTheme=()=>{this.theme.value=this.theme.value==="light"?"dark":"light"},p(()=>{const{themeButtonTextColor:e,themeButtonBackground:a}=this.themeProperties.value;this.mainButton.setParams({text_color:e,color:a}),this.applyTheme(this.themeProperties.value)}),p(()=>{this.logger.log(`theme changed to "${this.theme.value}"`)}),this.webApp.onEvent("themeChanged",()=>{this.logger.log('received "themeChanged" event from Telegram'),this.setTheme(B())})}applyTheme(e){const a=document.documentElement;for(const[s,i]of Object.entries(e)){const n=`--${me(s)}`;a.style.setProperty(n,i)}}}const Oe=new Me,q=new Fe,b=new we;p(()=>{b.currentState.value==="game_over"&&z(()=>{const{gameLevel:r,timeSpentInSeconds:e,cardsFlipCount:a}=b;q.addGameStatistic(r.value,{timeSpentInSeconds:e.value,cardFlipsCount:a.value})})});function Ne(){const{currentState:r,menuButtonText:e,mainButtonClickHandler:a}=b,s=r.value;return t(C.Provider,{value:b,children:t(A.Provider,{value:q,children:t(L.Provider,{value:Oe,children:t("div",{class:"game",children:[t("div",{class:"game__spacer"}),t("div",{class:"game__content",children:[s==="menu"&&t(Ie,{}),s==="game_over"&&t(ve,{}),(s==="init"||s==="run")&&t(de,{}),!Ce()&&t("button",{class:"game__fallback-menu",onClick:a,children:e.value})]}),t("div",{class:"game__spacer"})]})})})})}U(t(Ne,{}),document.getElementById("app"));
